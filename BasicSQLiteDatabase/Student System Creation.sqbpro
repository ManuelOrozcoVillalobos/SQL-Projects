<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/ma_or/HackerAttack/StudentSystemCreation.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="881"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainperson"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="person" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="72"/><column index="2" value="137"/><column index="3" value="204"/><column index="4" value="114"/><column index="5" value="105"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1"></sql><sql name="QueriesBackup">CREATE TABLE &quot;person&quot;(
	&quot;person_id&quot; VARCHAR(9) PRIMARY KEY,
	&quot;full_name&quot; TEXT,
	&quot;address&quot; TEXT,
	&quot;building_number&quot; TEXT,
	&quot;phone_number&quot; TEXT
);

CREATE TABLE teacher
(
	&quot;person_id&quot; VARCHAR(9) PRIMARY KEY,
	&quot;class_code&quot; TEXT
);

CREATE TABLE student
(
	&quot;person_id&quot; VARCHAR(9) PRIMARY KEY,
	&quot;grade_code&quot; TEXT
);

Create TABLE score1
(
&quot;person_id&quot; VARCHAR(9),
&quot;score&quot; INTEGER
);

Create TABLE score2
(
	&quot;person_id&quot; VARCHAR(9),
	&quot;score&quot; INTEGER
);

Create TABLE score3
(
	&quot;person_id&quot; VARCHAR(9),
	&quot;score&quot; INTEGER
);


CREATE TABLE score(
	&quot;person_id&quot; VARCHAR(9),
	&quot;score&quot; INTEGER
);

.mode csv
.import --skip 1 person.csv person
.import --skip 1 teacher.csv teacher
.import --skip 1 score1.csv score1
.import --skip 1 score2.csv score2
.import --skip 1 score3.csv score3
.mode column

INSERT INTO student 
	(person_id) 
SELECT 
	Person_id 
FROM  person 
WHERE 
	person_id not in (select person_id FROM teacher);


INSERT INTO score
SELECT * FROM score1
UNION ALL
SELECT * FROM score2
UNION ALL 
SELECT * FROM score3;

DROP TABLE score1;

DROP TABLE score2;

DROP TABLE score3;


UPDATE student
SET 
	grade_code = 'GD-09'
WHERE 
	student.person_id NOT IN 
(SELECT 
	person_id FROM score);


UPDATE student
SET 
	grade_code = 'GD-10'
WHERE 
	student.person_id IN 
	(SELECT  person_id FROM  score GROUP BY  person_id HAVING count(score) = 1
);


UPDATE student
SET 
	grade_code = 'GD-11'
WHERE 
	 student.person_id IN 
	(SELECT  person_id FROM score GROUP BY person_id HAVING  count(score) = 2
);


UPDATE student
SET 
	grade_code = 'GD-12'
WHERE 
	student.person_id IN 
	(SELECT person_id FROM score GROUP BY  person_id HAVING count(score) = 3
);

SELECT * FROM 
	student
ORDER BY 
	person_id
LIMIT 
	5;

SELECT * FROM 	
	score
ORDER BY 
	person_id
LIMIT 
	5;

SELECT 
	person_id, 
	count(score)
FROM score
GROUP BY 
	person_id
HAVING 
	count(score) = 3
LIMIT 
	5;

SELECT
	person_id,
	ROUND(AVG(score), 2) AS avg_score FROM score
GROUP BY 
	person_id
HAVING 
	person_id IN(SELECT person_id FROM student WHERE grade_code = &quot;GD-12&quot;)
ORDER BY 
	avg_score DESC;

</sql><current_tab id="1"/></tab_sql></sqlb_project>
